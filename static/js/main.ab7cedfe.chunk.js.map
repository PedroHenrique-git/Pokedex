{"version":3,"sources":["styles/GlobalStyle.tsx","images/pokebola.png","styles/colors.ts","components/Header/style.tsx","components/Header/Header.tsx","services/api.ts","components/PokemonCard/style.tsx","images/loading.gif","components/PokemonCard/PokemonCard.tsx","pages/Index/style.tsx","components/Loading/style.tsx","components/Loading/Loading.tsx","pages/Index/Index.tsx","pages/pokemonPage/style.tsx","utils/returnColor.ts","pages/pokemonPage/PokemonPage.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","azulMarinho","branco","cinzaEscuro","HeaderContainer","styled","header","colors","props","form","Heade","msg","hasForm","to","src","logo","alt","axios","create","baseURL","CardPokemon","li","PokemonCard","url","useState","name","sprites","other","front_default","pokemonData","setPokemonData","isLoading","setIsLoading","getData","a","api","get","response","data","toast","error","message","useEffect","Loading","MainContainer","main","LoadingContainer","div","LoadingGif","urls","Index","pokemons","setPokemons","value","setValue","arrayPokemons","results","getDataSearched","toLowerCase","trim","pokemon","push","onSubmit","e","preventDefault","handleSubmit","onChange","target","type","placeholder","className","map","index","onClick","totalItems","limit","totalPages","Math","ceil","offset","i","pagination","MainColor","qtdForms","returnColor","color","PokemonPage","useParams","id","forms","height","stats","base_stat","stat","types","slot","weight","setPokemon","getDataPokemon","undefined","ReturnColor","length","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab7cedfe.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'Open Sans', sans-serif;\r\n    }\r\n    html, body, #root {\r\n        width: 100%;\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/pokebola.9fc0eeae.png\";","export const azulMarinho = '#040308';\r\nexport const laranja = '#e62c07';\r\nexport const laranjaClaro = '#eb4405';\r\nexport const marrom = '#58302e';\r\nexport const marromAlaranjado = '#b92f13';\r\nexport const branco = '#f0eeec';\r\nexport const bege = '#d0b4a3';\r\nexport const laranjaClaro2 = '#ed9565';\r\nexport const cinzaClaro = '#cecece';\r\nexport const cinzaEscuro = '#202126';\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\ntype hasForm = {\r\n  form: boolean;\r\n};\r\n\r\nexport const HeaderContainer = styled.header<hasForm>`\r\n  background: ${colors.azulMarinho};\r\n  color: ${colors.branco};\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 15px;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: ${(props: hasForm) =>\r\n    props.form ? 'space-around' : 'center'};\r\n  align-items: center;\r\n\r\n  @media (max-width: 640px) {\r\n    height: 140px;\r\n  }\r\n\r\n  @media (max-width: 850px) {\r\n    flex-direction: ${(props: hasForm) => (props.form ? 'column' : 'row')};\r\n    height: ${(props: hasForm) => (props.form ? '170px' : '100px')};\r\n  }\r\n\r\n  form {\r\n    input,\r\n    button {\r\n      border-radius: 20px;\r\n      border: none;\r\n      outline: none;\r\n      padding: 10px;\r\n      font-size: 14px;\r\n      width: 280px;\r\n\r\n      @media (max-width: 640px) {\r\n        width: 250px;\r\n      }\r\n    }\r\n\r\n    button {\r\n      background: #759775;\r\n      cursor: pointer;\r\n      color: ${colors.branco};\r\n      margin-left: 10px;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    h1 {\r\n      color: ${colors.branco};\r\n      font-size: 20px;\r\n      font-weight: 500;\r\n    }\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    img {\r\n      height: 90px;\r\n      width: 90px;\r\n    }\r\n\r\n    //@media (max-width: 640px) {\r\n    //flex-direction: column;\r\n    //}\r\n  }\r\n\r\n  img {\r\n    height: 110px;\r\n    width: 110px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../images/pokebola.png';\r\nimport { HeaderContainer } from './style';\r\n\r\ninterface IHeader {\r\n  msg: string;\r\n  form: JSX.Element | undefined;\r\n  hasForm: boolean;\r\n}\r\nexport default function Heade({ msg, form, hasForm }: IHeader): JSX.Element {\r\n  return (\r\n    <HeaderContainer form={hasForm}>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"pokebola logo\" />\r\n        <h1>{msg}</h1>\r\n      </Link>\r\n      {form || false}\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({ baseURL: 'https://pokeapi.co/api/v2/' });\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const CardPokemon = styled.li`\r\n  border: 2px solid ${colors.azulMarinho};\r\n  border-radius: 5px;\r\n  background: ${colors.branco};\r\n  cursor: pointer;\r\n  width: 250px;\r\n  height: 250px;\r\n  list-style: none;\r\n  margin: 15px 0 0 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 640px) {\r\n    margin-left: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 20px;\r\n    color: ${colors.azulMarinho};\r\n    word-break: break-all;\r\n  }\r\n\r\n  img {\r\n    height: 180px;\r\n    width: 180px;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.3);\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/loading.e04eebc7.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../../services/api';\r\nimport { CardPokemon } from './style';\r\nimport Loading from '../../images/loading.gif';\r\n\r\ninterface IPokemonCard {\r\n  url: string;\r\n}\r\n\r\ninterface IPokemonData {\r\n  name: string;\r\n  sprites: {\r\n    other: {\r\n      'official-artwork': {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport default function PokemonCard({ url }: IPokemonCard): JSX.Element {\r\n  const [pokemonData, setPokemonData] = useState<IPokemonData>({\r\n    name: '',\r\n    sprites: {\r\n      other: {\r\n        'official-artwork': {\r\n          front_default: '',\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setIsLoading(false);\r\n      const response = await api.get<IPokemonData>(url);\r\n      const { data } = response;\r\n      setPokemonData(data);\r\n      setIsLoading(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n      setIsLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <CardPokemon>\r\n      <h1>{pokemonData.name}</h1>\r\n      <img\r\n        src={\r\n          isLoading\r\n            ? pokemonData.sprites.other['official-artwork'].front_default\r\n            : Loading\r\n        }\r\n        alt={pokemonData.name}\r\n      />\r\n    </CardPokemon>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const MainContainer = styled.main`\r\n  margin: 50px auto;\r\n  max-width: 1720px;\r\n\r\n  .pokemon_container {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  .load_more_container {\r\n    margin: 50px auto;\r\n    max-width: 900px;\r\n\r\n    @media (max-width: 640px) {\r\n      max-width: 340px;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    button {\r\n      background: ${colors.azulMarinho};\r\n      border-radius: 50%;\r\n      border: none;\r\n      color: ${colors.branco};\r\n      cursor: pointer;\r\n      outline: none;\r\n      height: 35px;\r\n      padding: 10px;\r\n      width: 35px;\r\n      font-size: 16px;\r\n      margin-right: 10px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      @media (max-width: 640px) {\r\n        margin-top: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { branco } from '../../styles/colors';\r\n\r\nexport const LoadingContainer = styled.div`\r\n  background: rgba(${branco}, 0.4);\r\n  position: absolute;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport LoadingGif from '../../images/loading.gif';\r\nimport { LoadingContainer } from './style';\r\n\r\nexport default function Loading(): JSX.Element {\r\n  return (\r\n    <LoadingContainer>\r\n      <img src={LoadingGif} alt=\"loading gif\" />\r\n    </LoadingContainer>\r\n  );\r\n}\r\n","import React, { FormEvent, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Header from '../../components/Header/Header';\r\nimport PokemonCard from '../../components/PokemonCard/PokemonCard';\r\nimport { MainContainer } from './style';\r\nimport api from '../../services/api';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\ninterface IData {\r\n  next: string;\r\n  previous: string;\r\n  results: Array<IResult>;\r\n}\r\n\r\ninterface IResult {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nconst urls: string[] = [];\r\nconst pagination = (totalItems: number, limit: number): void => {\r\n  const totalPages: number = Math.ceil(totalItems / limit);\r\n  let offset = 0;\r\n\r\n  for (let i = 1; i <= totalPages; i += 1) {\r\n    urls.push(`pokemon?limit=${limit}&offset=${offset}`);\r\n    offset += limit;\r\n  }\r\n};\r\n\r\npagination(1118, 84);\r\n\r\nexport default function Index(): JSX.Element {\r\n  const [pokemons, setPokemons] = useState<IResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [value, setValue] = useState('');\r\n\r\n  const getData = async (url: string) => {\r\n    try {\r\n      setIsLoading(false);\r\n      const response = await api.get<IData>(url);\r\n      const { data } = response;\r\n      const arrayPokemons: IResult[] = data.results;\r\n      setPokemons(arrayPokemons);\r\n      setIsLoading(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n\r\n  const getDataSearched = async () => {\r\n    try {\r\n      setIsLoading(false);\r\n      const response = await api.get<IData>(\r\n        `/pokemon/${value.toLowerCase().trim()}`\r\n      );\r\n\r\n      if (response.data) {\r\n        const arrayPokemons: IResult[] = [];\r\n        const pokemon: IResult = {\r\n          name: value,\r\n          url: `/pokemon/${value}`,\r\n        };\r\n        arrayPokemons.push(pokemon);\r\n        setPokemons(arrayPokemons);\r\n      }\r\n\r\n      setIsLoading(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n      setIsLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    getDataSearched();\r\n  };\r\n\r\n  const pagesBtn = () =>\r\n    urls.map((url, index) => (\r\n      <button onClick={() => getData(url)} type=\"button\">\r\n        {index + 1}\r\n      </button>\r\n    ));\r\n\r\n  const form: JSX.Element = (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <input\r\n        onChange={(e) => setValue(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"search a pokemon\"\r\n      />\r\n      <button type=\"submit\">search</button>\r\n    </form>\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData('pokemon?limit=84&offset=0');\r\n  }, []);\r\n\r\n  if (!isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header msg=\"Pokedex made in React\" form={form} hasForm />\r\n      <MainContainer>\r\n        <ul className=\"pokemon_container\">\r\n          {pokemons.map((pokemon) => (\r\n            <Link to={`/pokemon/${pokemon.name}`}>\r\n              <PokemonCard url={pokemon.url} />\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n        <div className=\"load_more_container\">{pagesBtn()}</div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\ntype IStyle = {\r\n  MainColor: string;\r\n  qtdForms: number;\r\n};\r\n\r\nexport const MainContainer = styled.main<IStyle>`\r\n  max-width: 1720px;\r\n  margin: 100px auto 0 auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 30px;\r\n\r\n  @media (max-width: 1062px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 640px) {\r\n    margin: 20px auto;\r\n  }\r\n\r\n  .basic_informations {\r\n    transform: perspective(400px) rotateY(30deg);\r\n\r\n    @media (max-width: 1062px) {\r\n      transform: perspective(0px) rotateY(0deg);\r\n    }\r\n\r\n    &:hover {\r\n      transform: perspective(0px) rotateY(0deg);\r\n      transition: all 0.3s;\r\n    }\r\n\r\n    .pokemon_title_mobile {\r\n      display: none;\r\n      color: ${colors.cinzaEscuro};\r\n      text-transform: uppercase;\r\n      font-size: 24px;\r\n      font-weight: 100;\r\n      text-align: center;\r\n      margin-bottom: 40px;\r\n\r\n      @media (max-width: 1062px) {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .information {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 20px 0;\r\n\r\n      h2 {\r\n        color: ${colors.cinzaEscuro};\r\n        text-transform: uppercase;\r\n        margin-right: 35px;\r\n        font-size: 22px;\r\n        font-weight: 100;\r\n      }\r\n\r\n      p {\r\n        color: ${colors.cinzaEscuro};\r\n        text-transform: uppercase;\r\n        margin-right: 35px;\r\n        font-size: 16px;\r\n        font-weight: 100;\r\n      }\r\n\r\n      .pokemon_types,\r\n      .pokemon_forms {\r\n        display: flex;\r\n        li {\r\n          background: ${(props: IStyle) => props.MainColor};\r\n          border-radius: 20px;\r\n          color: ${(props: IStyle) =>\r\n            props.MainColor === '#e2e32b' ? colors.cinzaEscuro : colors.branco};\r\n          padding: 10px;\r\n          text-transform: uppercase;\r\n          font-weight: 100;\r\n          list-style: none;\r\n          margin-right: 15px;\r\n\r\n          &:last-of-type {\r\n            margin: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .pokemon_forms {\r\n    flex-direction: ${(props: IStyle) =>\r\n      props.qtdForms > 3 ? 'column' : 'row'};\r\n\r\n    li {\r\n      margin-top: ${(props: IStyle) => (props.qtdForms > 3 ? '10px' : '0px')};\r\n\r\n      &:last-of-type {\r\n        margin-top: ${(props: IStyle) =>\r\n          props.qtdForms > 3 ? '10px' : '0px'} !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .main_informations {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    h1 {\r\n      color: ${colors.cinzaEscuro};\r\n      text-transform: uppercase;\r\n      font-size: 24px;\r\n      font-weight: 100;\r\n\r\n      @media (max-width: 1062px) {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    img {\r\n      @media (max-width: 640px) {\r\n        height: 350px;\r\n        width: 350px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .pokemon_stats {\r\n    transform: perspective(400px) rotateY(-30deg);\r\n\r\n    @media (max-width: 1062px) {\r\n      transform: perspective(0px) rotateY(0deg);\r\n    }\r\n\r\n    &:hover {\r\n      transform: perspective(0px) rotateY(0deg);\r\n      transition: all 0.3s;\r\n    }\r\n\r\n    .stat {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 20px 0;\r\n\r\n      h2 {\r\n        color: ${colors.cinzaEscuro};\r\n        text-transform: uppercase;\r\n        margin-right: 35px;\r\n        font-size: 22px;\r\n        font-weight: 100;\r\n      }\r\n\r\n      p {\r\n        background: ${(props: IStyle) => props.MainColor};\r\n        border-radius: 20px;\r\n        color: ${(props: IStyle) =>\r\n          props.MainColor === '#e2e32b' ? colors.cinzaEscuro : colors.branco};\r\n        text-transform: uppercase;\r\n        margin-right: 35px;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        font-weight: 100;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default function returnColor(type: string): string {\r\n  let color = '';\r\n  if (type === 'bug') color = '#3c9950';\r\n  if (type === 'dark') color = '#595978';\r\n  if (type === 'dragon') color = '#62cad9';\r\n  if (type === 'electric') color = '#e2e32b';\r\n  if (type === 'fairy') color = '#961a45';\r\n  if (type === 'fighting') color = '#994025';\r\n  if (type === 'fire') color = '#ab1f24';\r\n  if (type === 'flying') color = '#4a677d';\r\n  if (type === 'ghost') color = '#33336b';\r\n  if (type === 'grass') color = '#147b3d';\r\n  if (type === 'ground') color = '#6e491f';\r\n  if (type === 'ice') color = '#86d2f5';\r\n  if (type === 'normal') color = '#75525c';\r\n  if (type === 'poison') color = '#5e2d89';\r\n  if (type === 'psychic') color = '#a52a6c';\r\n  if (type === 'rock') color = '#48190b';\r\n  if (type === 'steel') color = '#60756e';\r\n  if (type === 'water') color = '#1552e1';\r\n  return color;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { MainContainer } from './style';\r\nimport Header from '../../components/Header/Header';\r\nimport api from '../../services/api';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport ReturnColor from '../../utils/returnColor';\r\n\r\ninterface IParams {\r\n  name: string;\r\n}\r\n\r\ninterface IPokemon {\r\n  id: number;\r\n  name: string;\r\n  height: number;\r\n  weight: number;\r\n  types: Array<{\r\n    slot: number;\r\n    type: {\r\n      name: string;\r\n    };\r\n  }>;\r\n  stats: Array<{\r\n    base_stat: number;\r\n    stat: {\r\n      name: string;\r\n    };\r\n  }>;\r\n  forms: Array<{\r\n    name: string;\r\n  }>;\r\n  sprites: {\r\n    other: {\r\n      'official-artwork': {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport default function PokemonPage(): JSX.Element {\r\n  const { name } = useParams<IParams>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pokemon, setPokemon] = useState<IPokemon>({\r\n    id: 0,\r\n    forms: [\r\n      {\r\n        name: '',\r\n      },\r\n    ],\r\n    height: 0,\r\n    name: '',\r\n    sprites: {\r\n      other: {\r\n        'official-artwork': {\r\n          front_default: '',\r\n        },\r\n      },\r\n    },\r\n    stats: [\r\n      {\r\n        base_stat: 0,\r\n        stat: {\r\n          name: '',\r\n        },\r\n      },\r\n    ],\r\n    types: [\r\n      {\r\n        slot: 0,\r\n        type: {\r\n          name: '',\r\n        },\r\n      },\r\n    ],\r\n    weight: 0,\r\n  });\r\n\r\n  const getDataPokemon = async () => {\r\n    try {\r\n      setIsLoading(false);\r\n      const response = await api.get<IPokemon>(`pokemon/${name}`);\r\n      const { data } = response;\r\n      setPokemon(data);\r\n      setIsLoading(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n      setIsLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataPokemon();\r\n  }, []);\r\n\r\n  if (!isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header msg=\"Pokedex made in React\" form={undefined} hasForm={false} />\r\n      <MainContainer\r\n        MainColor={ReturnColor(pokemon.types[0].type.name)}\r\n        qtdForms={pokemon.forms.length}\r\n      >\r\n        <div className=\"basic_informations\">\r\n          <h1 className=\"pokemon_title_mobile\">{pokemon.name}</h1>\r\n          <div className=\"information\">\r\n            <h2>id</h2>\r\n            <p>#{pokemon.id}</p>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h2>name</h2>\r\n            <p>{pokemon.name}</p>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h2>height</h2>\r\n            <p>{pokemon.height}</p>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h2>weight</h2>\r\n            <p>{pokemon.weight}</p>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h2>types</h2>\r\n            <ul className=\"pokemon_types\">\r\n              {pokemon.types.map((type) => (\r\n                <li>{type.type.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h2>forms</h2>\r\n            <ul className=\"pokemon_forms\">\r\n              {pokemon.forms.map((form) => (\r\n                <li>{form.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"main_informations\">\r\n          <h1>{pokemon.name}</h1>\r\n          <img\r\n            src={pokemon.sprites.other['official-artwork'].front_default}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"pokemon_stats\">\r\n          {pokemon.stats.map((stat) => (\r\n            <div className=\"stat\">\r\n              <h2>{stat.stat.name}</h2>\r\n              <p>{stat.base_stat}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Index from '../pages/Index/Index';\r\nimport PokemonPage from '../pages/pokemonPage/PokemonPage';\r\n\r\nexport default function Routes(): JSX.Element {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Index} />\r\n      <Route exact path=\"/pokemon/:name\" component={PokemonPage} />\r\n      <Route exact path=\"*\" component={Index} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Routes from './routes/routes';\n\nfunction App(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Routes />\n      <ToastContainer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}